{"version":3,"sources":["components/FoodTable.js","components/InputForm.js","components/Instructions.js","App.js","index.js"],"names":["FoodTable","useState","food","setFood","axios","get","then","response","data","dateArr","map","f","beautifyDate","nameArr","name","genreArr","genre","locationArr","location","busArr","bus","trainArr","train","countryArr","country","idArr","_id","foodTable","item","idx","InputForm","setName","setGenre","setCountry","setLocation","setBus","setTrain","handleSubmit","event","a","placesObject","post","headers","console","log","catch","err","Form","onSubmit","FormGroup","Label","Input","type","id","placeholder","onChange","target","value","Instructions","href","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.714397e0.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst FoodTable = () => {\r\n  const [food, setFood] = useState([])\r\n\r\n  const serverAddress = 'http://localhost:5000'\r\n\r\n  // GET /api/foodplaces\r\n  axios.get(`${serverAddress}/api/foodplaces`)\r\n    .then((response) => {\r\n      setFood(response.data.data)\r\n    })\r\n  const dateArr = food.map(f => f.beautifyDate)\r\n  const nameArr = food.map(f => f.name)\r\n  const genreArr = food.map(f => f.genre)\r\n  const locationArr = food.map(f => f.location)\r\n  const busArr = food.map(f => f.bus)\r\n  const trainArr = food.map(f => f.train)\r\n  const countryArr = food.map(f => f.country)\r\n  const idArr = food.map(f => f._id)\r\n\r\n  const foodTable = nameArr\r\n    .map((item, idx) => {\r\n      return (\r\n        <tr>\r\n          <td>{item}</td>\r\n          <td>{genreArr[idx]}</td>\r\n          <td>{locationArr[idx]}</td>\r\n          <td>{countryArr[idx]}</td>\r\n          <td>{busArr[idx]}</td>\r\n          <td>{trainArr[idx]}</td>\r\n          <td>{dateArr[idx]}</td>\r\n          <td>{idArr[idx]}</td>\r\n        </tr>\r\n      )\r\n    })\r\n\r\n\r\n  return (\r\n    <table>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Genre</th>\r\n        <th>Location</th>\r\n        <th>Country</th>\r\n        <th>Bus</th>\r\n        <th>Train</th>\r\n        <th>Date Added</th>\r\n        <th>ID</th>\r\n      </tr>\r\n      <tbody>\r\n        {foodTable}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport default FoodTable","import React, { useState, useEffect } from 'react'\r\nimport { Form, FormGroup, Label, Input, Button } from 'reactstrap'\r\nimport axios from 'axios'\r\n\r\nconst InputForm = () => {\r\n  const [name, setName] = useState('')\r\n  const [genre, setGenre] = useState('')\r\n  const [country, setCountry] = useState('')\r\n  const [location, setLocation] = useState('')\r\n  const [bus, setBus] = useState('')\r\n  const [train, setTrain] = useState('')\r\n  const [id, setId] = useState('')\r\n\r\n  const serverAddress = 'http://localhost:5000'\r\n\r\n  // Handling events\r\n  const handleNameChange = (event) => {\r\n    setName(event.target.value)\r\n  }\r\n\r\n  const handeGenreChange = (event) => {\r\n    setGenre(event.target.value)\r\n  }\r\n\r\n  const handleLocationChange = (event) => {\r\n    setLocation(event.target.value)\r\n  }\r\n\r\n  const handleCountryChange = (event) => {\r\n    setCountry(event.target.value)\r\n  }\r\n\r\n  const handleBusChange = (event) => {\r\n    setBus(event.target.value)\r\n  }\r\n\r\n  const handleTrainChange = (event) => {\r\n    setTrain(event.target.value)\r\n  }\r\n\r\n  const handleIdChange = (event) => {\r\n    setId(event.target.value)\r\n  }\r\n\r\n  // Submission of form\r\n  const handleSubmit = async (event) => {\r\n    const placesObject = {\r\n      name: name,\r\n      genre: genre,\r\n      location: location,\r\n      country: country,\r\n      bus: bus,\r\n      train: train\r\n    }\r\n    // POST to api/foodplaces\r\n    await axios\r\n      .post(`${serverAddress}/api/foodplaces`, placesObject, {\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=UTF-8',\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n        }\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data)\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n  return (\r\n    <>\r\n      <Form onSubmit={handleSubmit}>\r\n        <FormGroup>\r\n          <Label>Name</Label>\r\n          <Input\r\n            type=\"text\" name=\"Name\" id=\"name\" placeholder=\"Input the food name\"\r\n            onChange={handleNameChange}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label>Genre</Label>\r\n          <Input\r\n            type=\"text\" name=\"Genre\" id=\"genre\" placeholder=\"Input the genre\"\r\n            onChange={handeGenreChange}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label>Location</Label>\r\n          <Input\r\n            type=\"text\" name=\"Location\" id=\"location\" placeholder=\"Input the location\"\r\n            onChange={handleLocationChange}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label>Country</Label>\r\n          <Input\r\n            type=\"text\" name=\"Country\" id=\"Country\" placeholder=\"Input the country\"\r\n            onChange={handleCountryChange}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label>Bus</Label>\r\n          <Input\r\n            type=\"text\" name=\"Bus\" id=\"\"\r\n            placeholder=\"Input the bus svcs with a comma(no need for inverted commas): example --> '109, 250'\"\r\n            onChange={handleBusChange}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label>Nearest Train Station</Label>\r\n          <Input\r\n            type=\"text\" name=\"Train\" id=\"train\" placeholder=\"Input the nearest train station\"\r\n            onChange={handleTrainChange}\r\n          />\r\n        </FormGroup>\r\n        <button type='submit'>Submit</button>\r\n      </Form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default InputForm","import React from 'react'\r\n\r\nconst Instructions = () => {\r\n  return (\r\n    <>\r\n      <h1>Instructions</h1>\r\n      <p>This is a user input driven api. The purpose is to gather data on more exotic places to eat and dine.\r\n        Why? This is because they are poorly represented in travel sites and even Google.</p>\r\n      <p>It is reccomended to input all fields unless there is no info about it.</p>\r\n      <p>To delete or update, you will need to use a client that can handle HTTP requests eg postman. This is to filter out bots from mis-deleting data from the api.</p>\r\n      <p>Simply copy paste the id and key in all fields in json format.</p>\r\n      <p>'https://(domainname)/api/foodplaces/(paste id here)</p>\r\n      <p>To update, enter all fields again in json format and use the PATCH request</p>\r\n      <p>To delete, simply paste id and send DELETE request</p>\r\n      <p><a href='https://github.com/thchong-code/food-rest-api'>Github</a></p>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Instructions","import React from 'react';\nimport FoodTable from './components/FoodTable'\nimport InputForm from './components/InputForm'\nimport Instructions from './components/Instructions'\n\nimport './App.css'\n\nfunction App() {\n  return (\n    <>\n      <Instructions />\n      <InputForm />\n      <FoodTable />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}